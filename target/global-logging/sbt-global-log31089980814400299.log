[debug] > Exec(early(addDefaultCommands), None, None)
[debug] > Exec(addDefaultCommands, None, None)
[debug] > Exec(early(initialize), None, None)
[debug] > Exec(initialize, None, None)
[debug] > Exec(early(addPluginSbtFile="""C:\Users\lansrod\AppData\Local\Temp\idea.sbt"""), None, None)
[debug] > Exec(addPluginSbtFile="""C:\Users\lansrod\AppData\Local\Temp\idea.sbt""", None, None)
[debug] > Exec(boot, None, None)
[debug] > Exec(writeSbtVersion, None, None)
[debug] > Exec(reload, None, None)
[debug] > Exec(sbtStashOnFailure, None, None)
[debug] > Exec(onFailure loadFailed, None, None)
[debug] > Exec(loadp, None, None)
[info] welcome to sbt 1.4.7 (Oracle Corporation Java 1.8.0_191)
[debug]       Load.loadUnit: plugins took 70.7227ms
[debug]       Load.loadUnit: defsScala took 0.2558ms
[debug] [Loading] Scanning directory C:\Users\lansrod\.sbt\1.0\plugins
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\lansrod\.sbt\1.0\plugins, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(List(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin))), Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 15.6778 ms
[debug]           Load.resolveProject(global-plugins) took 35.9645ms
[debug]         Load.loadTransitive: finalizeProject(Project(id global-plugins, base: C:\Users\lansrod\.sbt\1.0\plugins, plugins: List(<none>))) took 72.0969ms
[debug] [Loading] Done in C:\Users\lansrod\.sbt\1.0\plugins, returning: (global-plugins)
[debug]       Load.loadUnit: loadedProjectsRaw took 88.4745ms
[debug]       Load.loadUnit: cleanEvalClasses took 0.2101ms
[debug]     Load.loadUnit(file:/C:/Users/lansrod/.sbt/1.0/plugins/, ...) took 165.595ms
[debug]   Load.apply: load took 285.841ms
[debug]   Load.apply: resolveProjects took 4.8791ms
[debug]   Load.apply: finalTransforms took 40.6586ms
[debug]   Load.apply: config.delegates took 5.9346ms
[debug]   Load.apply: Def.make(settings)... took 1916.5866ms
[debug]   Load.apply: structureIndex took 68.8138ms
[debug]   Load.apply: mkStreams took 1.3059ms
[info] loading global plugins from C:\Users\lansrod\.sbt\1.0\plugins
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug] Load.defaultLoad until apply took 3744.9301ms
[debug]           Load.loadUnit: plugins took 19.7468ms
[debug]           Load.loadUnit: defsScala took 0.0028ms
[debug] [Loading] Scanning directory C:\Users\lansrod\IdeaProjects\exercism\project
[debug]             Load.loadUnit: mkEval took 10.1048ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\lansrod\IdeaProjects\exercism\project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(List(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin))), Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 1.3662 ms
[info] loading settings for project exercism-build from idea.sbt ...
[debug]               Load.resolveProject(exercism-build) took 5.0276ms
[debug]             Load.loadTransitive: finalizeProject(Project(id exercism-build, base: C:\Users\lansrod\IdeaProjects\exercism\project, plugins: List(<none>))) took 6.8215ms
[debug] [Loading] Done in C:\Users\lansrod\IdeaProjects\exercism\project, returning: (exercism-build)
[debug]           Load.loadUnit: loadedProjectsRaw took 113.5327ms
[debug]           Load.loadUnit: cleanEvalClasses took 3.4031ms
[debug]         Load.loadUnit(file:/C:/Users/lansrod/IdeaProjects/exercism/project/, ...) took 137.5483ms
[debug]       Load.apply: load took 138.549ms
[debug]       Load.apply: resolveProjects took 0.0717ms
[debug]       Load.apply: finalTransforms took 6.1876ms
[debug]       Load.apply: config.delegates took 0.2913ms
[debug]       Load.apply: Def.make(settings)... took 77.3643ms
[debug]       Load.apply: structureIndex took 17.9396ms
[debug]       Load.apply: mkStreams took 0.0019ms
[info] loading project definition from C:\Users\lansrod\IdeaProjects\exercism\project
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug]     Load.loadUnit: plugins took 418.0099ms
[debug]     Load.loadUnit: defsScala took 0.0022ms
[debug] [Loading] Scanning directory C:\Users\lansrod\IdeaProjects\exercism
[debug]       Load.loadUnit: mkEval took 0.2017ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\lansrod\IdeaProjects\exercism, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(List(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin))), Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(org.jetbrains.sbt.StructurePlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(org.jetbrains.sbt.IdeaShellPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.StructurePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.IdeaShellPlugin))), Clause(And(Set(Atom(sbt.plugins.CorePlugin), Atom(sbt.plugins.JvmPlugin))),Set(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin)))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.SemanticdbPlugin,org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin,sbt.plugins.JUnitXmlReportPlugin,org.jetbrains.sbt.IdeaShellPlugin,org.jetbrains.sbt.StructurePlugin,sbt.plugins.MiniDependencyTreePlugin)
[debug] Plugins.deducer#function took 1.5878 ms
[info] loading settings for project exercism from build.sbt ...
[debug]         Load.resolveProject(exercism) took 28.9855ms
[debug]       Load.loadTransitive: finalizeProject(Project(id exercism, base: C:\Users\lansrod\IdeaProjects\exercism, plugins: List(<none>))) took 31.5379ms
[debug] [Loading] Done in C:\Users\lansrod\IdeaProjects\exercism, returning: (exercism)
[debug]     Load.loadUnit: loadedProjectsRaw took 75.4779ms
[debug]     Load.loadUnit: cleanEvalClasses took 4.6154ms
[debug]   Load.loadUnit(file:/C:/Users/lansrod/IdeaProjects/exercism/, ...) took 498.6225ms
[debug] Load.apply: load took 499.8922ms
[debug] Load.apply: resolveProjects took 0.0926ms
[debug] Load.apply: finalTransforms took 26.4674ms
[debug] Load.apply: config.delegates took 0.3833ms
[debug] Load.apply: Def.make(settings)... took 59.4224ms
[debug] Load.apply: structureIndex took 25.7282ms
[debug] Load.apply: mkStreams took 0.003ms
[info] set current project to exercism (in build file:/C:/Users/lansrod/IdeaProjects/exercism/)
[debug] > Exec(sbtPopOnFailure, None, None)
[debug] > Exec(resumeFromFailure, None, None)
[debug] > Exec(notifyUsersAboutShell, None, None)
[debug] > Exec(iflast shell, None, None)
[debug] > Exec(; set ideaPort in Global := 55867 ; idea-shell, None, None)
[debug] > Exec(set ideaPort in Global := 55867, None, None)
[info] Defining Global / ideaPort
[info] The new value will be used by Compile / compile, Test / compile
[debug] Defining 
[debug] 	Global / ideaPort
[debug] 
[debug] The new value will be used by 
[debug] 	Compile / compile
[debug] 	Test / compile
[info] Reapplying settings...
[info] set current project to exercism (in build file:/C:/Users/lansrod/IdeaProjects/exercism/)
[debug] > Exec(idea-shell, None, None)
